server:
  port: 8080

application:
  group: laolang

spring:
  main:
    lazy-initialization: false
    banner-mode: off
  application:
    name: customer-service
  profiles:
    active: dev
  output:
    ansi:
      enabled: always

  transaction:
    rollback-on-commit-failure: true

  mvc:
    throw-exception-if-no-handler-found: true
    view:
      suffix: .html

    # 自定义属性 见 com.frm.springboot.WebConfig.java
    cors-filter: true # 是否实例化(开启)跨域过滤器

  web:
    resources:
      add-mappings: false

  jackson:
    serialization:
      write-dates-as-timestamps: false

  jpa:
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext

  cache:
    type: redis
    redis:
      time-to-live: 3600s

  session:
    timeout: 3600s
    store-type: none
    #store-type: redis
    #redis:
    #  cleanup-cron: 0 */30 * * * ?
    #  namespace: spring:session
    #  flush-mode: on_save

  redis: # 依赖 spring-boot-starter-data-redis
    host: localhost
    port: 6379
    #password: 15bc104021ea44258202381e32be4cca
    # 密码(如无密码请放空)
    password:
    database: 0 # Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0

    timeout: 10000 #连接超时时间（毫秒）

    # 如果使用的 jedis 则将lettuce 改成 jedis 即可
    lettuce:
      pool:
        max-active: 8 # 最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1 # 最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-idle: 8 # 最大空闲连接 默认 8
        min-idle: 0 # 最小空闲连接 默认 0

    redisson:
      config: |
        singleServerConfig:
          idleConnectionTimeout: 10000
          connectTimeout: 10000
          timeout: 3000
          retryAttempts: 3
          retryInterval: 1500
          address: redis://${spring.redis.host}:${spring.redis.port}
          password: ${spring.redis.password}
          clientName: null
          keepAlive: false
          tcpNoDelay: false
          # 单个连接最大订阅数量
          subscriptionsPerConnection: 5
          # 发布和订阅连接的最小空闲连接数
          subscriptionConnectionMinimumIdleSize: 1
          # 发布和订阅连接池大小
          subscriptionConnectionPoolSize: 50
          # 最小空闲连接数
          connectionMinimumIdleSize: 32
          # 连接池大小
          connectionPoolSize: 64
          # 数据库编号
          database: ${spring.redis.database}
          # DNS监测时间间隔，单位：毫秒
          dnsMonitoringInterval: 5000
        threads: 8
        nettyThreads: 8
        codec: !<org.redisson.client.codec.StringCodec> {}
        transportMode: "NIO"

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    # (开发测试)开启或关闭(生产)控制台sql打印；如果已经使用p6spy就没必要配置它打印SQL了(关闭它)，因为p6spy更好用
    # 关闭方法：将log-impl设置为空或删除配置即可；开启方法：将log-impl值设置为org.apache.ibatis.logging.stdout.StdOutImpl
    log-impl: #org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    enable-sql-runner: true # 允许使用 SqlRunner 直接操作sql语句
    banner: false
    db-config:
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0

# PageHelper分页插件(工作原理：如果发现代入mybatis dao的实体对象或map参数中同时包含pageNum与pageSize参数此插件将自动在原SQL基础上追加加分页语句 limit ${(pageNum-1)*pageSize}, #{pageSize})
pagehelper:
  helperDialect: mysql
  reasonable: false # 当此值为true时无论如何都会发起count查询算出总页数来验证pageNum的正确性
  supportMethodsArguments: false # 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
  params: count=countSql

logging:
  config: classpath:log4j2-spring.xml

--- ### 文档 ###
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui
  default-flat-param-object: true # 参见 https://doc.xiaominfo.com/docs/faq/v4/knife4j-parameterobject-flat-param 文档

# knife4j的增强配置
knife4j: # since v2.0.6, 用以替代 @EnableKnife4j
  enable: true # 是否开启增强属性，默认false
  documents:
    - group: 4.5.0版本 # 所属分组
      name: 接口签名 # 类似于接口中的tag,对于自定义文档的分组
      locations: classpath:md/* # markdown文件路径,可以是一个文件夹(classpath:markdowns/*)，也可以是单个文件(classpath:md/sign.md)
  setting:
    language: zh-CN # Ui默认显示语言,目前主要有两种:中文(zh-CN)、英文(en-US)。默认zh-CN
  production: false # 开启生产环境屏蔽，默认false，注意：一定要先开启knife4j增强才会生效
  basic:
    enable: true # 对Knife4j提供的资源提供BasicHttp校验,保护文档。默认false
    username: test
    password: 123123

# 自定义属性文件
# 见 com.cmpt.sys.security.config.SettingProperties
# 见 com.cmpt.captcha.config.CaptchaProperties
# 见 com.cmpt.oss.upload.config.OssProperties
# 见 com.cmpt.ws.props.WebSocketProperties
config:
  setting: cs-admin/src/main/resources/setting.properties # 这种格式仅在Idea下运行时才能找到正确目录
  #setting: ./src/main/resources/setting.properties # 这种格式仅在Idea下运行测试案例时才能找到正确目录
  security: cs-admin/src/main/resources/security.properties
  captcha: cs-admin/src/main/resources/captcha.properties # 这种格式仅在Idea下运行时才能找到正确目录
  oss: cs-admin/src/main/resources/oss.properties # 这种格式仅在Idea下运行时才能找到正确目录
  ws: cs-admin/src/main/resources/ws.properties
  sys: cs-admin/src/main/resources/sys.properties

page:
  plain: false
  rowsAlias: records
  totalAlias: total

--- ### 自定义 ###
jfrm:
  info:
    version: 1.0.1-snapshot
    base-package: com.laolang.cs
    mapper-package: com.cmpt.**.mapper,com.laolang.cs.**.mapper # 该包目录将用于 MyBatis Mapper 扫描
  mybatis-plus:
    pagination:
      enabled: true # 开启分页
    optimistic:
      enabled: true # 开启乐观锁
  web:
    member-api:
      prefix: /member-api
      controller: com.**.controller.member.**
    admin-api:
      prefix: /admin-api
      controller: com.**.controller.admin.**
    admin-ui:
      url: http://localhost:${server.port} # Admin 管理后台 UI 的地址
    filter:
      cors: true # 开启全局跨域过滤器
    serial-write-timestamp: false # 日期是否序列化为时间戳
  setting:
    securityStrategy: token
    tokenHeaderKey: Authorization
    tokenValPrefix: 'Bearer '
    loginProcessor: filter
    useCaptcha: false
    captchaSize: 5
    captchaDuration: 5
    duration: 30
    encryptPassword: true
    privateKey: MIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBANHtrETGQh9E2ZeFv2DqS3IOJGL35y8e6nzJnrl2lkVkY5niZTpT/RGrgDv5tBHJbbsYu0lw7vbBmpIS2+D7hKGhpqnmXcd91HYajsbvvxbnuX1i9mbCclce2AzypLfWbi4hSIiFXKgdy6OX9+IX+bJ5UBkLkyYVHGdWfbWvLutLAgMBAAECgYBi2QHzxFLgPGAky9KIhOoPg384prhR5MHPDnTRqXgqppGLpSG7LE8OYe3Yz8QtV+Z2YbfWZfnvcMwimgS01Fnnk0T6xCjz2IJRjTzISElWyiGslFWm0qjFrVEydDucM0kw3jBmw4roeVGGKkmbR0C2QjB4czdERqihZZxOgu3+kQJBAOyCViBiJcOhzzEzM9SuHcsYoi5Mwia93fzoroojNPWShmIx/PSvE3LxYzZszFBpy3uzTN1hMslu3fQg9s1MKdkCQQDjOo9HKLxnHTT0tB6h1aySJqt8+8dD9rQ7J8HYrD9idcPXVZ5WyM6x0i8YGj2u+TR1KDx/9fnZlAjwOy4JKYPDAkAVonqUbcX8llGos4FbRC4vhOpZB+Z+usGSwAovUrcme6fVVbNJArbpvdEQinVKKdNWVnmCisClkoG1MkrBTuVJAkAlxYA3pe/bfCFnY+GLqUcsbD0pY3j2NTY0dyFj8Q4AQe8yBktxxaOGL5gge4wxX792kh+sbakAn/j0ZgH7B+mdAkAIN2hkHJPpgc6L0111TdtdH/lvgxmJ9QgOd1wb5pHL2mtUUvXK3SkOF08agg3kv8I9qmDOcjs7A6zEjAV7Dijn
    staticCustomLocations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
  swagger: # 仅当 springdoc.api-docs.enabled 开启时有效
    title: JFRM快速开发平台
    description: 客服 Server
    version: ${jfrm.info.version}
    url: ${jfrm.web.admin-ui.url}
    email: noname@example.com
    license: MIT
    license-url: https://localhost:${server.port}/LICENSE